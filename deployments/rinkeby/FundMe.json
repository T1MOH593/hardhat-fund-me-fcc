{
  "address": "0xAA32f553D08A20AF4d29fb630a28B2872d3AdbeD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x60becee527539d0ac18bdc8474029e1b3a8577b56fc7a77855f6fd1165e3ae30",
  "receipt": {
    "to": null,
    "from": "0x5EF2F7E83Fc077Fd1ab4F89DAa0970D7C3e8306E",
    "contractAddress": "0xAA32f553D08A20AF4d29fb630a28B2872d3AdbeD",
    "transactionIndex": 26,
    "gasUsed": "822026",
    "logsBloom": "0x
    "blockHash": "0xff5b9c8c44f1ffe67fd94624ff459a07dea62dd45e846a3a5dc7b5487304055a",
    "transactionHash": "0x60becee527539d0ac18bdc8474029e1b3a8577b56fc7a77855f6fd1165e3ae30",
    "logs": [],
    "blockNumber": 11011247,
    "cumulativeGasUsed": "4943721",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 3,
  "solcInputHash": "78f19f11ee3ee48954e4493c31c736ed",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 constant MINIMAL_USD = 1 * 1e18;\\n\\n    mapping(address => uint256) addressToAmountFunded;\\n    address[] funders;\\n    mapping(address => uint256) addressToFundersIndex;\\n\\n    address payable public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == i_owner);\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = payable(msg.sender);\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.convertValueToUsd(priceFeed) >= MINIMAL_USD);\\n        if (addressToFundersIndex[msg.sender] == 0) {\\n            funders.push(msg.sender);\\n            addressToFundersIndex[msg.sender] = funders.length;\\n        }\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            addressToAmountFunded[funders[i]] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool successCall, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(successCall, \\\"not successful\\\");\\n    }\\n\\n    function get(address addr) public view returns (uint256) {\\n        return addressToAmountFunded[addr];\\n    }\\n}\\n\",\"keccak256\":\"0x9a41ebd1d69123a9140a9f959bcad01264b9dd4c760eb734381ce2f2b36ac620\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function convertValueToUsd(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256 usdAmount) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        usdAmount = (ethPrice * ethAmount) / 1e18;\\n    }\\n\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // int256 price = 110000000000;\\n        return uint256(price * 1e10);\\n    }\\n}\\n\",\"keccak256\":\"0x8f77376b3ccc60b3f3453dafe4a80da28d7b56b9d6520ece537c826c68486a2e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ee1380380610ee183398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d7b610166600039600081816102b201528181610412015261054d0152610d7b6000f3fe60806040526004361061004e5760003560e01c80633ccfd60b14610067578063741bef1a1461007e578063b60d4288146100a9578063c2bc2efc146100b3578063dba6335f146100f05761005d565b3661005d5761005b61011b565b005b61006561011b565b005b34801561007357600080fd5b5061007c6102b0565b005b34801561008a57600080fd5b506100936104dd565b6040516100a0919061076b565b60405180910390f35b6100b161011b565b005b3480156100bf57600080fd5b506100da60048036038101906100d591906107c9565b610503565b6040516100e7919061080f565b60405180910390f35b3480156100fc57600080fd5b5061010561054b565b604051610112919061084b565b60405180910390f35b670de0b6b3a7640000610159600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056f90919063ffffffff16565b101561016457600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610259576001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180549050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102a79190610895565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461030857600080fd5b60005b6001805490508110156103ad57600080600060018481548110610331576103306108eb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103a59061091a565b91505061030b565b50600067ffffffffffffffff8111156103c9576103c8610963565b5b6040519080825280602002602001820160405280156103f75781602001602082028036833780820191505090505b506001908051906020019061040d929190610645565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1647604051610454906109c3565b60006040518083038185875af1925050503d8060008114610491576040519150601f19603f3d011682016040523d82523d6000602084013e610496565b606091505b50509050806104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d190610a35565b60405180910390fd5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061057b836105a5565b9050670de0b6b3a764000084826105929190610a55565b61059c9190610ade565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105ee57600080fd5b505afa158015610602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106269190610bb3565b5050509150506402540be4008161063d9190610c2e565b915050919050565b8280548282559060005260206000209081019282156106be579160200282015b828111156106bd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610665565b5b5090506106cb91906106cf565b5090565b5b808211156106e85760008160009055506001016106d0565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061073161072c610727846106ec565b61070c565b6106ec565b9050919050565b600061074382610716565b9050919050565b600061075582610738565b9050919050565b6107658161074a565b82525050565b6000602082019050610780600083018461075c565b92915050565b600080fd5b6000610796826106ec565b9050919050565b6107a68161078b565b81146107b157600080fd5b50565b6000813590506107c38161079d565b92915050565b6000602082840312156107df576107de610786565b5b60006107ed848285016107b4565b91505092915050565b6000819050919050565b610809816107f6565b82525050565b60006020820190506108246000830184610800565b92915050565b6000610835826106ec565b9050919050565b6108458161082a565b82525050565b6000602082019050610860600083018461083c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108a0826107f6565b91506108ab836107f6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108e0576108df610866565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610925826107f6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561095857610957610866565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109ad600083610992565b91506109b88261099d565b600082019050919050565b60006109ce826109a0565b9150819050919050565b600082825260208201905092915050565b7f6e6f74207375636365737366756c000000000000000000000000000000000000600082015250565b6000610a1f600e836109d8565b9150610a2a826109e9565b602082019050919050565b60006020820190508181036000830152610a4e81610a12565b9050919050565b6000610a60826107f6565b9150610a6b836107f6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610aa457610aa3610866565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ae9826107f6565b9150610af4836107f6565b925082610b0457610b03610aaf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b2e81610b0f565b8114610b3957600080fd5b50565b600081519050610b4b81610b25565b92915050565b6000819050919050565b610b6481610b51565b8114610b6f57600080fd5b50565b600081519050610b8181610b5b565b92915050565b610b90816107f6565b8114610b9b57600080fd5b50565b600081519050610bad81610b87565b92915050565b600080600080600060a08688031215610bcf57610bce610786565b5b6000610bdd88828901610b3c565b9550506020610bee88828901610b72565b9450506040610bff88828901610b9e565b9350506060610c1088828901610b9e565b9250506080610c2188828901610b3c565b9150509295509295909350565b6000610c3982610b51565b9150610c4483610b51565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c8357610c82610866565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610cc057610cbf610866565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610cfd57610cfc610866565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d3a57610d39610866565b5b82820290509291505056fea264697066735822122014c7fd1f2e50507ddfdfb8195fbdcf467ca4741ee87fc8b81a6b3664b5be93df64736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80633ccfd60b14610067578063741bef1a1461007e578063b60d4288146100a9578063c2bc2efc146100b3578063dba6335f146100f05761005d565b3661005d5761005b61011b565b005b61006561011b565b005b34801561007357600080fd5b5061007c6102b0565b005b34801561008a57600080fd5b506100936104dd565b6040516100a0919061076b565b60405180910390f35b6100b161011b565b005b3480156100bf57600080fd5b506100da60048036038101906100d591906107c9565b610503565b6040516100e7919061080f565b60405180910390f35b3480156100fc57600080fd5b5061010561054b565b604051610112919061084b565b60405180910390f35b670de0b6b3a7640000610159600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056f90919063ffffffff16565b101561016457600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610259576001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180549050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102a79190610895565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461030857600080fd5b60005b6001805490508110156103ad57600080600060018481548110610331576103306108eb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103a59061091a565b91505061030b565b50600067ffffffffffffffff8111156103c9576103c8610963565b5b6040519080825280602002602001820160405280156103f75781602001602082028036833780820191505090505b506001908051906020019061040d929190610645565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1647604051610454906109c3565b60006040518083038185875af1925050503d8060008114610491576040519150601f19603f3d011682016040523d82523d6000602084013e610496565b606091505b50509050806104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d190610a35565b60405180910390fd5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061057b836105a5565b9050670de0b6b3a764000084826105929190610a55565b61059c9190610ade565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105ee57600080fd5b505afa158015610602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106269190610bb3565b5050509150506402540be4008161063d9190610c2e565b915050919050565b8280548282559060005260206000209081019282156106be579160200282015b828111156106bd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610665565b5b5090506106cb91906106cf565b5090565b5b808211156106e85760008160009055506001016106d0565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061073161072c610727846106ec565b61070c565b6106ec565b9050919050565b600061074382610716565b9050919050565b600061075582610738565b9050919050565b6107658161074a565b82525050565b6000602082019050610780600083018461075c565b92915050565b600080fd5b6000610796826106ec565b9050919050565b6107a68161078b565b81146107b157600080fd5b50565b6000813590506107c38161079d565b92915050565b6000602082840312156107df576107de610786565b5b60006107ed848285016107b4565b91505092915050565b6000819050919050565b610809816107f6565b82525050565b60006020820190506108246000830184610800565b92915050565b6000610835826106ec565b9050919050565b6108458161082a565b82525050565b6000602082019050610860600083018461083c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108a0826107f6565b91506108ab836107f6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108e0576108df610866565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610925826107f6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561095857610957610866565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109ad600083610992565b91506109b88261099d565b600082019050919050565b60006109ce826109a0565b9150819050919050565b600082825260208201905092915050565b7f6e6f74207375636365737366756c000000000000000000000000000000000000600082015250565b6000610a1f600e836109d8565b9150610a2a826109e9565b602082019050919050565b60006020820190508181036000830152610a4e81610a12565b9050919050565b6000610a60826107f6565b9150610a6b836107f6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610aa457610aa3610866565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ae9826107f6565b9150610af4836107f6565b925082610b0457610b03610aaf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b2e81610b0f565b8114610b3957600080fd5b50565b600081519050610b4b81610b25565b92915050565b6000819050919050565b610b6481610b51565b8114610b6f57600080fd5b50565b600081519050610b8181610b5b565b92915050565b610b90816107f6565b8114610b9b57600080fd5b50565b600081519050610bad81610b87565b92915050565b600080600080600060a08688031215610bcf57610bce610786565b5b6000610bdd88828901610b3c565b9550506020610bee88828901610b72565b9450506040610bff88828901610b9e565b9350506060610c1088828901610b9e565b9250506080610c2188828901610b3c565b9150509295509295909350565b6000610c3982610b51565b9150610c4483610b51565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c8357610c82610866565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610cc057610cbf610866565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610cfd57610cfc610866565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d3a57610d39610866565b5b82820290509291505056fea264697066735822122014c7fd1f2e50507ddfdfb8195fbdcf467ca4741ee87fc8b81a6b3664b5be93df64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToFundersIndex",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}